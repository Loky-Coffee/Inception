services:
  mariadb:
    build: 
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    container_name: mariadb
    expose:
      - "3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    secrets:
      - db_password
      - db_root_password
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD_FILE=/run/secrets/db_password
    networks:
      - wordpress_network
    restart: always
    init: true

  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    container_name: wordpress
    expose:
      - "9000"
    volumes:
      - wordpress_data:/var/www/html
    secrets:
      - db_password
      - wp_admin_password
      - wp_user_password
    depends_on:
      - mariadb
    networks:
      - wordpress_network
    restart: always
    init: true

  nginx:
    build: 
      context: ./requirements/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html:ro
      - ./certificates:/etc/nginx/ssl
    depends_on:
      - wordpress
    networks:
      - wordpress_network
    restart: always
    init: true

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: ${DATA_PATH}/mariadb
      o: bind
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: ${DATA_PATH}/wordpress
      o: bind

networks:
  wordpress_network:
    driver: bridge

secrets:
  db_password:
    file: ../secrets/db_password.txt
  db_root_password:
    file: ../secrets/db_root_password.txt
  wp_admin_password:
    file: ../secrets/wp_admin_password.txt
  wp_user_password:
    file: ../secrets/wp_user_password.txt